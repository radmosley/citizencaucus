const state = {
    cats: [],
    cat: {},
    errors: {},
    loading: false
}

const getters = {
    currentSenator (state) {
        return state.senator;
    },
    senators (state) {
        return state.senators;
    }, 
    isLoading (state) {
        return state.loading;
    }
}

const mutations = {
    [FETCH_START] (state) {
        state.loading = true
    },
    [FETCH_END] (state) {
        state.loading = false
    },
    [SETASENATOR] (state, pSenator) {
        state.senator = pSenator
        state.errors = {}
    },
    [SETSENATORS] (state, pSenators) {
        state.senators = pSenators
        state.errors = {}
    },
    [SET_ERROR] (state) {
        state.errors = errors
    }
}

const actions = {
    [FETCH_SENATORS] (context, payload) {
        context.commit(FETCH_START)
        return APIService
            .get('senators')
            .then(({data})) => {
                context.commit(SETSENATORS, data.senators.results);
                context.commit(FETCH_END)
        }
        .catch(({response})) => {
            context.commit(SET_ERROR, response.data.errors)
        }
    },
    [FETCHASENATOR] (context, payload) {
        context.commit(FETCH_START)
        const {senator_id} = payload
        return APIService
            .get(`senators/${senator_id}`)
            .then(({data}) => {
                conext.commit(SETASENATOR, data.senators);
                context.commit(FETCH_END)
            })
            .catch(({response}) => {
                context.commit(SET_ERROR, response.data.errors)
            })
    }
}